{"version":3,"sources":["Activities/Filters.tsx","Shared/formatters.ts","Shared/Loading.tsx","Shared/Mapbox.tsx","Activities/ActivityPreview.tsx","Activities/hooks/useInfiniteActivities.ts","Activities/ActivityList.tsx","Activities/Activities.tsx","Shared/utils.ts","Charts/ElevationChart.tsx","Charts/PaceChart.tsx","Charts/SplitsChart.tsx","Charts/HeartRateChart.tsx","Activities/DetailedActivity.tsx","Activities/ActivityService.ts","Activities/Upload.tsx","Activities/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Filters","onFilterChange","filters","useState","setFilters","useEffect","fetch","then","resp","json","useFilters","filter","setFilter","options","setOptions","length","totalCount","reduce","prev","curr","total","all","label","value","map","type","Select","a11yTitle","labelKey","placeholder","size","onChange","e","console","log","option","formatPace","minutes","Math","floor","seconds","padStart","formatDuration","totalMinutes","totalHours","useStyles","createUseStyles","container","width","display","justifyContent","margin","Loading","css","className","color","height","Mapbox","polyline","mapContainer","useRef","setupMap","geojson","mapboxPoly","bounds","coords","bbox","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","coord","min","max","getBoundingBox","coordinates","mapboxgl","current","style","fitBoundsOptions","padding","top","bottom","left","right","accessToken","process","addControl","scrollZoom","disable","on","addSource","data","properties","geometry","addLayer","id","source","layout","paint","ref","image","preview","borderRadius","border","boxShadow","marginBottom","header","alignItems","flexWrap","ActivityPreview","activity","index","history","useHistory","classes","openActivity","push","_id","aria-posinset","tabIndex","onClick","onKeyDown","event","key","Heading","level","format","Date","startTime","Text","title","imageURL","src","alt","Box","direction","justify","distance","toFixed","pace","avg","elevation","elapsedTime","FooterColumn","useInfiniteActivities","loading","setLoading","activities","setActivities","hasNextPage","setHasNextPage","setTotalCount","page","setPage","onLoadMore","a","params","URLSearchParams","append","toString","response","result","useActivities","useInView","inView","timer","setTimeout","clearTimeout","ActivityList","role","aria-label","aria-busy","main","flexDirection","paddingTop","paddingLeft","paddingRight","mainContent","maxWidth","paddingBottom","Activities","UploadButton","to","Button","primary","fill","range","from","i","ElevationChart","points","point","altitude","ticks","ResponsiveContainer","AreaChart","CartesianGrid","strokeDasharray","XAxis","dataKey","unit","interval","YAxis","allowDecimals","Tooltip","labelFormatter","d","formatter","Area","isAnimationActive","stroke","PaceChart","speed","filterStanding","LineChart","tickCount","minTickGap","reversed","val","Line","dot","SplitsChart","currentSplit","time","forEach","getTime","name","lastPoint","dist","calculateSplits","BarChart","Bar","HeartRateChart","streamData","heartRate","DetailedActivityContainer","activityId","useParams","setActivity","loadActivities","handleGoBack","goBack","position","borderBottom","zIndex","backgroundColor","headerLayout","gridTemplateColumns","marginAuto","marginRight","statsHeader","DetailedActivity","icon","Previous","ActivityService","baseUrl","getAllActivities","pageNumber","pageSize","filerVal","axios","get","this","getActivity","upload","file","formData","FormData","post","getFilters","content","actions","fileInput","marginTop","actionBtn","minWidth","Upload","setFile","FileInput","uploadedFile","target","files","item","disabled","ActivityRoutes","path","useRouteMatch","exact","App","Grommet","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d3864cfc.chunk.js","sourcesContent":["import { Select } from 'grommet';\nimport React, { useEffect, useState } from 'react';\n\nimport { ActivityTypeAggregation } from './models';\n\nconst useFilters = () => {\n  const [filters, setFilters] = useState<ActivityTypeAggregation[]>([]);\n  \n  useEffect(() => {\n    fetch('/filters')\n      .then(resp => resp.json())\n      .then(json => setFilters(json));\n  }, []);\n\n  return {\n    filters\n  };\n};\n\ntype FiltersProps = {\n  onFilterChange: (filter: string) => void;\n}\n\ntype SelectOption = {\n  label: string;\n  value: string;\n}\n\nexport const Filters = ({ onFilterChange }: FiltersProps) => {\n  const { \n    filters\n  } = useFilters();\n  const [filter, setFilter] = useState<SelectOption>();\n  const [options, setOptions] = useState<SelectOption[]>([]);\n\n  useEffect(() => {\n    if (filters.length === 0) {\n      return;\n    };\n\n    const totalCount = filters.reduce((prev, curr) => prev + curr.total, 0);\n    const all: SelectOption = {\n      label: `All (${totalCount})`,\n      value: 'All'\n    };\n\n    const options: SelectOption[] = [\n      all,\n      ...filters.map(filter => {\n        return {\n          label: filter.type + ` (${filter.total})`,\n          value: filter.type\n        }\n      })\n    ];\n\n    setFilter(all);\n    setOptions(options);\n  }, [filters]);\n\n  const handleSelect = (e: any) => {\n    console.log(e.option);\n    setFilter(e.option);\n    onFilterChange(e.option.value);\n  };\n\n  return (\n    <Select\n      a11yTitle=\"Filter by activity type\"\n      options={options}\n      labelKey='label'\n      placeholder='-'\n      value={filter}\n      size=\"small\"\n      onChange={handleSelect}\n    />\n  );\n};","/**\n * Converts a number value (representing a speed in m/s) into a string representation\n * of the value in Minutes / Kilometer\n */\nexport const formatPace = (value: number): string => {\n const minutes = Math.floor(value / 60);\n const seconds = `${Math.floor(value - (minutes * 60))}`;\n\n return `${minutes}:${seconds.padStart(2, '0')}`;\n}\n\n/**\n * Converts value (representing a duration in seconds) into a string formatted \n * as hh mm ss\n * e.g. 1h 28m or 28m 10s\n */\nexport const formatDuration = (value: number): string => {\n const totalMinutes = Math.floor(value / 60);\n const totalHours = Math.floor(totalMinutes / 60);\n const seconds = Math.floor(value - totalMinutes * 60);\n\n if (totalHours >= 1) {\n   return `${totalHours}h ${totalMinutes % 60}m`;\n }\n\n return `${totalMinutes}m ${seconds}s`;\n}","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { BeatLoader } from 'react-spinners';\n\nconst useStyles = createUseStyles({\n  container: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '2rem 0'\n  }\n})\n\nexport const Loading = () => {\n  const css = useStyles();\n\n  return (\n    <div className={css.container}>\n      <BeatLoader\n        size='30px'\n        margin='4px'\n        color='#7D4CDB'\n      />\n    </div>\n  )\n}","import React, { useEffect, useRef } from 'react';\n\nimport * as mapboxgl from 'mapbox-gl';\nimport * as mapboxPoly from '@mapbox/polyline';\nimport { createUseStyles } from 'react-jss';\n\nconst getBoundingBox = (coords: any[]) => {\n  const bbox = [\n    Number.POSITIVE_INFINITY,\n    Number.POSITIVE_INFINITY,\n    Number.NEGATIVE_INFINITY,\n    Number.NEGATIVE_INFINITY,\n  ];\n\n  return coords.reduce((prev, coord) => {\n    return [\n      Math.min(coord[0], prev[0]),\n      Math.min(coord[1], prev[1]),\n      Math.max(coord[0], prev[2]),\n      Math.max(coord[1], prev[3]),\n    ]\n  }, bbox);\n};\n\nconst useStyles = createUseStyles({\n  map: {\n    height: '25rem'\n  }\n});\n\ntype MapboxProps = {\n  polyline: string;\n}\n\nexport const Mapbox = ({ polyline }: MapboxProps) => {\n  const mapContainer = useRef(null);\n  const css = useStyles();\n\n  useEffect(() => {\n    setupMap();\n  });\n\n  const setupMap = (): void => {\n    const geojson = mapboxPoly.toGeoJSON(polyline);\n    const bounds = getBoundingBox(geojson.coordinates);\n\n    const map = new mapboxgl.Map({\n      container: mapContainer.current || '',\n      style: 'mapbox://styles/mapbox/outdoors-v11',\n      bounds: new mapboxgl.LngLatBounds(bounds),\n      fitBoundsOptions: {\n        padding: {\n          top: 40,\n          bottom: 40,\n          left: 40,\n          right: 40,\n        },\n      },\n      accessToken: process.env.REACT_APP_MAPBOX_PUBLIC_KEY,\n    });\n\n    // Add map controls\n    map.addControl(new mapboxgl.NavigationControl());\n    map.scrollZoom.disable();\n\n    map.on('load', () => {\n      map.addSource('route', {\n        type: 'geojson',\n        data: {\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'LineString',\n            coordinates: geojson.coordinates,\n          },\n        },\n      });\n      map.addLayer({\n        id: 'route',\n        type: 'line',\n        source: 'route',\n        layout: {\n          'line-join': 'round',\n          'line-cap': 'round',\n        },\n        paint: {\n          'line-color': '#008DD5',\n          'line-width': 4,\n        },\n      });\n    });\n  }\n\n  return (\n    <div ref={mapContainer} className={css.map}></div>\n  )\n}","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { format } from 'date-fns';\n\nimport { Activity } from './models';\nimport { formatDuration, formatPace } from '../Shared';\nimport { createUseStyles } from 'react-jss';\nimport { Box, Heading, Text } from 'grommet';\n\ntype ActivityPreviewProps = {\n  activity: Activity;\n  index: number;\n  totalCount?: number;\n}\n\nconst useStyles = createUseStyles({\n  image: {\n    width: '100%'\n  },\n  preview: {\n    borderRadius: 3,\n    border: '1px solid #e2e2e2',\n    boxShadow: '0px 8px 24px rgba(13,13,18,0.04)',\n    padding: '1rem 1rem 1rem 1rem',\n    marginBottom: '1rem'\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    marginBottom: '0.5rem'\n  }\n})\n\nexport const ActivityPreview = ({ activity, index }: ActivityPreviewProps) => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  function openActivity() {\n    history.push(`/activities/${activity._id}`);\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent) {\n    if (event.key === \"ENTER\") {\n      openActivity()\n    }\n  }\n\n  return (\n    <article\n      className={classes.preview}\n      aria-posinset={index}\n      tabIndex={0}\n      onClick={openActivity}\n      onKeyDown={handleKeyDown}\n    >\n      <div className={classes.header}>\n        <Heading\n          margin=\"none\"\n          level=\"4\"\n        >{ format(new Date(activity.startTime), \"EEEE, LLLL d, yyyy\") }</Heading>\n        <Text>{ activity.title }</Text>\n      </div>\n\n      {activity.imageURL && (\n        <img\n          src={activity.imageURL}\n          alt=\"Activity GPS preview\"\n          className={classes.image}\n        />\n      )}\n\n      <Box direction='row' justify='between'>\n        <FooterColumn title='Distance' value={ `${Number(activity.distance / 1000).toFixed(2)} km`} />\n        <FooterColumn title='Pace' value={ `${formatPace(activity.pace.avg ?? 0) } min / km`} />\n        <FooterColumn title='Elevation' value={`${Number((activity.elevation.max ?? 0) - (activity.elevation.min ?? 0)).toFixed(1)} m`} />\n        <FooterColumn title='Elapsed Time' value={ formatDuration(activity.elapsedTime)} />\n      </Box>\n    </article>\n  )\n}\n\ntype FooterColumnProps = {\n  title: string;\n  value: string;\n}\n\nconst FooterColumn = ({title, value}: FooterColumnProps) => {\n  return (\n    <Box direction='column'>\n      <Text className=\"title\">{ title }</Text>\n      <Text className=\"value mb-0\">{ value }</Text>\n    </Box>\n  )\n}","import { useEffect, useState } from 'react';\n\nimport { useInView } from \"react-intersection-observer\";\n\nimport { Activity, GetAllResponse } from '../models';\n\nconst useActivities = (filter: string) => {\n  const [loading, setLoading] = useState(false);\n  const [activities, setActivities] = useState<Activity[]>([]);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [totalCount, setTotalCount] = useState<number>();\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (activities.length === totalCount) {\n      setHasNextPage(false);\n    }\n  }, [activities, totalCount]);\n\n  // Reset the state if the filter changes\n  useEffect(() => {\n    setActivities([]);\n    setPage(1);\n  }, [filter]);\n\n  const onLoadMore = async () => {\n    setLoading(true);\n    const params = new URLSearchParams();\n    params.append(\"page\", page.toString());\n    params.append(\"pageSize\", \"5\");\n\n    if (filter !== '' && filter !== 'All') {\n      params.append('type', filter);\n    }\n    setPage(page + 1);\n\n    const response: Response = await fetch(\"/activities?\" + params.toString());\n    const result: GetAllResponse = await response.json();\n\n    setTotalCount(result.total);\n    setActivities((current) => [...current, ...result.data]);\n    setLoading(false);\n  }\n\n  return {\n    loading,\n    activities,\n    hasNextPage,\n    onLoadMore,\n    totalCount\n  };\n}\n\nexport const useInfiniteActivities = (filter: string) => {\n  const {\n    loading,\n    activities,\n    hasNextPage,\n    onLoadMore,\n    totalCount\n  } = useActivities(filter);\n  const { ref, inView } = useInView();\n\n  useEffect(() => {\n    if (!loading && inView && hasNextPage) {\n      // Using a setTimeout to prevent an extra call that happens during the render phase\n      const timer = setTimeout(() => {\n        onLoadMore()\n      }, 100);\n\n      return () => {\n        clearTimeout(timer);\n      }\n    }\n  }, [onLoadMore, loading, inView, hasNextPage]);\n\n  return {\n    ref,\n    activities,\n    loading,\n    hasNextPage,\n    totalCount\n  };\n}","import React from \"react\";\n\n\nimport { ActivityPreview } from \"./ActivityPreview\";\nimport { Loading } from \"../Shared\";\nimport { useInfiniteActivities } from './hooks/useInfiniteActivities';\n\ntype ActivityListProps = {\n  filter: string;\n}\n\nexport const ActivityList = ({ filter }: ActivityListProps) => {\n  const {\n    ref,\n    activities,\n    loading,\n    hasNextPage,\n    totalCount\n  } = useInfiniteActivities(filter);\n\n  return (\n    <div\n      role=\"feed\"\n      aria-label=\"Feed of activities sorted by most recent\"\n      aria-busy={loading}\n    >\n      {activities.map((activity, index) => (\n        <ActivityPreview\n          key={activity._id}\n          activity={activity}\n          index={index}\n          totalCount={totalCount}\n        />\n      ))}\n      {hasNextPage && (\n        <span ref={ref} style={{ height: '1px' }}>\n          {loading && <Loading />}\n        </span>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { Filters } from './Filters';\nimport { ActivityList } from './ActivityList';\n\nimport { Box, Button } from 'grommet';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: '1rem',\n    paddingLeft: '1rem',\n    paddingRight: '1rem'\n  },\n  mainContent: {\n    maxWidth: '100%',\n    width: 'min(50rem, 100%)',\n    paddingBottom: '1rem'\n  },\n  header: {\n    marginBottom: '1.5rem'\n  }\n})\n\nexport const Activities = () => {\n  const [filter, setFilter] = useState('');\n  const classes = useStyles();\n  return (\n    <main className={classes.main}>\n      <div className={classes.mainContent}>\n        <header className={classes.header}>\n          <Box\n            direction=\"row\"\n            justify=\"between\"\n          >\n            <UploadButton />\n            <Filters onFilterChange={setFilter} />\n          </Box>\n        </header>\n        <ActivityList filter={filter} />\n      </div>\n    </main>\n  )\n}\n\nconst UploadButton = () => {\n  return (\n    <Link to='/activities/upload'>\n      <Button\n        primary\n        label='Upload'\n        fill='vertical'\n      ></Button>\n    </Link>\n  )\n}","export const range = (from: number, to: number): number[] => {\n  const result = [];\n  for (let i = from; i <= to; i++) {\n    result.push(i);\n  }\n  return result;\n}","import React from 'react';\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { DataPoint } from '../Activities/models';\nimport { range } from '../Shared/utils';\n\ntype ElevationChartProps = {\n  points: DataPoint[];\n  distance: number;\n}\n\nconst ElevationChart = ({ points, distance }: ElevationChartProps) => {\n  const data = points.filter(point => {\n    return point.altitude && point.distance;\n  }).map(point => {\n    const elevation = point.altitude as number;\n    const distance = point.distance as number;\n\n    return {\n      // TODO: Maybe be better to label with time\n      distance: Number(distance / 1000).toFixed(1),\n      elevation: Number(elevation).toFixed(1)\n    };\n  });\n\n  const ticks = range(0, distance / 1000);\n\n  const tooltipLabelFormat = (d: any) => {\n    return `Distance: ${d}km`;\n  }\n\n  const valueFormatter = (d: any) => {\n    return `${d}m`;\n  }\n\n  return (\n    <ResponsiveContainer height={250} width='100%'>\n      <AreaChart\n        data={data}\n        margin={{\n          top: 10, right: 30, left: 0, bottom: 0,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"distance\" ticks={ticks} unit={'km'} interval={1} />\n        <YAxis allowDecimals={false} unit={'m'} />\n        <Tooltip labelFormatter={tooltipLabelFormat} formatter={valueFormatter} />\n        <Area isAnimationActive={false} type=\"monotone\" dataKey=\"elevation\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n      </AreaChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default ElevationChart;","import React from 'react';\n\nimport {\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  LineChart,\n  Line\n} from \"recharts\";\nimport { DataPoint } from '../Activities/models';\nimport { formatPace } from '../Shared';\n\ntype PaceChartProps = {\n  points: DataPoint[];\n}\n\nconst MetersPerSecondToMinutesPerKMConversionFactor = 1000 / 60;\n\nconst PaceChart = ({ points }: PaceChartProps) => {\n  let data = points\n    .filter(point => {\n      return point.distance && point.speed;\n    })\n    .map(point => {\n      return {\n        distance: Number((point.distance as number) / 1000).toFixed(1),\n        pace: MetersPerSecondToMinutesPerKMConversionFactor / Number(point.speed)\n      };\n    });\n  \n  data = filterStanding(data);\n\n  const valFormatter = (d: any) => {\n    const val = d * 60;\n    return `${formatPace(val)} min / km`;\n  }\n\n  return (\n    <ResponsiveContainer height={250} width='100%'>\n      <LineChart\n        data={data}\n        margin={{\n          top: 10, right: 30, left: 0, bottom: 0,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"distance\" allowDecimals={false} tickCount={4} unit={'km'} minTickGap={20} />\n        <YAxis allowDecimals={false} reversed />\n        <Tooltip formatter={valFormatter} labelFormatter={(val) => `${val}km`} />\n        <Line type=\"monotone\" dataKey=\"pace\" stroke=\"#8884d8\" dot={false} />\n      </LineChart>\n    </ResponsiveContainer>\n  )\n}\n\nfunction filterStanding(data: any[]) {  \n  return data.filter((point) => point.pace <= 20);\n}\n\nexport default PaceChart;","import React from 'react';\n\nimport {\n  Bar,\n  BarChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { DataPoint } from '../Activities/models';\n\ntype SplitsChartProps = {\n  points: DataPoint[]\n}\n\nconst SplitsChart = ({ points }: SplitsChartProps) => {\n  const data = calculateSplits(points);\n\n  function calculateSplits(points: DataPoint[]) {\n    const data: object[] = [];\n\n    if (!points.length || points.length === 0) { return data; }\n\n    let currentSplit = 1; // 1st KM\n    let startTime = points[0].time!;\n\n    const filtered = points.filter(point => {\n      return point.distance && point.time;\n    });\n\n    filtered.forEach((point, i) => {\n      if (point.distance! < (currentSplit * 1000)) {\n        return;\n      }\n\n      const seconds = (new Date(point.time!).getTime() - new Date(startTime).getTime()) / 1000;\n\n      data.push({\n        name: currentSplit,\n        value: Number(1000 / seconds).toFixed(4)\n      });\n      currentSplit++;\n      startTime = point.time!;\n    });\n\n    const lastPoint = points[points.length - 1];\n    const seconds = (new Date(lastPoint.time!).getTime() - new Date(startTime).getTime()) / 1000;\n\n    const dist = (lastPoint.distance! as number) - (1000 * (currentSplit - 1));\n\n    // If the last split is less than 100m, ignore it\n    if (dist < 100) {\n      return data;\n    }\n\n    data.push({\n      name: currentSplit,\n      value: Number(seconds / dist).toFixed(2)\n    });\n\n    return data;\n  }\n\n  return (\n    <ResponsiveContainer height={250} width='100%'>\n      <BarChart data={data} >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Bar dataKey=\"value\" fill=\"#6fd450\" />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default SplitsChart;","import React from 'react';\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport { range } from '../Shared/utils';\nimport { DataPoint } from '../Activities/models';\n\nexport type Props = {\n  streamData: DataPoint[];\n  distance: number;\n};\n\nexport const HeartRateChart = ({ streamData, distance }: Props) => {\n  const data = streamData\n      .filter(point => {\n        return point?.heartRate && point?.distance;\n      })\n      .map(point => {\n        return {\n          distance: +Number(point.distance! / 1000).toFixed(2),\n          heartRate: point.heartRate\n        }\n      });\n\n  const ticks = range(0, Number(distance / 1000));\n\n  return (\n    <>\n      {data && (\n        <ResponsiveContainer height={250} width='100%'>\n          <AreaChart\n            data={data}\n            margin={{\n              top: 10, right: 30, left: 30, bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"distance\" unit={'km'} ticks={ticks} />\n            <YAxis allowDecimals={true} unit={'bpm'} />\n            <Tooltip />\n            <Area isAnimationActive={false} type=\"monotone\" dataKey=\"heartRate\" stroke=\"#F87666\" fill=\"#F87666\" />\n          </AreaChart>\n        </ResponsiveContainer>\n      )}\n    </>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { Previous } from 'grommet-icons';\nimport { format } from 'date-fns';\n\nimport { Mapbox } from '../Shared';\nimport { Activity } from './models';\nimport { Loading } from '../Shared';\nimport { ElevationChart, PaceChart, SplitsChart, HeartRateChart } from '../Charts';\nimport { createUseStyles } from 'react-jss';\nimport { Button, Heading } from 'grommet';\n\ninterface DetailedActivityParams {\n  activityId: string;\n}\n\nconst DetailedActivityContainer = () => {\n  const history = useHistory();\n  const { activityId } = useParams<DetailedActivityParams>();\n\n  const [ activity, setActivity ] = useState<Activity>();\n\n  useEffect(() => {\n    loadActivities(activityId);\n  }, [ activityId ]);\n\n  async function loadActivities(id: string) {\n    const response = await fetch('/activities/' + id);\n    const json = await response.json();\n\n    setActivity(json);\n  }\n\n  function goBack() {\n    history.goBack();\n  }\n\n  return (\n    <DetailedActivity\n      activity={activity}\n      handleGoBack={goBack}\n    />\n  )\n}\n\ntype DetailedActivityProps = {\n  activity?: Activity;\n  handleGoBack(): void;\n}\n\nconst useStyles = createUseStyles({\n  header: {\n    position: 'sticky',\n    top: 0,\n    borderBottom: '1px solid #e0e0e0',\n    zIndex: 1000,\n    backgroundColor: 'white',\n    padding: '1rem',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  headerLayout: {\n    display: 'grid',\n    gridTemplateColumns: '1fr auto 1fr',\n    justifyContent: 'center',\n    maxWidth: '55rem',\n    width: '100%'\n  },\n  marginAuto: {\n    margin: 'auto',\n    marginRight: 0\n  },\n  statsHeader: {\n    padding: '0rem 1rem',\n  }\n})\n\nconst DetailedActivity = ({ activity, handleGoBack }: DetailedActivityProps) => { \n  const css = useStyles();\n\n  return (\n    <div className=\"activity-component\">\n      <div className={css.header}>\n        <div className={css.headerLayout}>\n          <div>\n            <Button\n              onClick={handleGoBack}\n              icon={<Previous />}\n              label='Activities'\n              size='small'\n            />\n          </div>\n          <Heading level='3' className={css.marginAuto}>{ activity?.type ? activity.type : 'Loading' }</Heading>\n        </div>\n      </div>\n       \n      { activity?.polyline && <Mapbox polyline={ activity.polyline } />}\n      { (activity && activity.streamData) ? (\n        <>\n          <Heading\n            level='2'\n            className={css.statsHeader}\n          >{ `${format(new Date(activity.startTime), 'EEEE, LLLL d, yyyy')} at ${format(new Date(activity.startTime), 'HH:mm aaa')}`}</Heading>\n          \n          <Heading level='3' className={css.statsHeader}>Heart Rate</Heading>\n          <HeartRateChart streamData={activity.streamData} distance={activity.distance} />\n\n          <Heading level='3' className={css.statsHeader}>Elevation</Heading>\n          <ElevationChart points={activity.streamData} distance={activity.distance} />\n\n          <Heading level='3' className={css.statsHeader}>Pace</Heading>\n          <PaceChart points={activity.streamData} />   \n\n          <Heading level='3' className={css.statsHeader}>Splits</Heading>\n          <SplitsChart points={activity.streamData} />\n        </>\n      ) : <Loading />}\n    </div>\n  )\n}\n\nexport { DetailedActivityContainer as DetailedActivity };","import axios from 'axios';\nimport { GetAllResponse, ActivityTypeAggregation, Activity } from './models';\n\nexport const ActivityService = {\n  baseUrl: process.env.REACT_APP_BASE_API_URL,\n\n  getAllActivities(pageNumber: number, pageSize: number, filter: string | null = null) {\n    const filerVal = filter === 'All' ? null : filter;\n    return axios.get<GetAllResponse>(this.baseUrl + '/activities', {\n      params: {\n        pageNumber: pageNumber,\n        pageSize: pageSize,\n        type: filerVal\n      }\n    })\n  },\n\n  getActivity(id: string) {\n    return axios.get<Activity>(this.baseUrl + '/activities/' + id)\n  },\n\n  upload(file: File) {\n    const formData = new FormData();\n    formData.append('file', file, file.name);\n    return axios.post(this.baseUrl + '/upload', formData);\n  },\n\n  getFilters() {\n    const url = '/filters';\n\n    return axios.get<ActivityTypeAggregation[]>(url);\n  }\n}","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { ActivityService } from './ActivityService';\nimport { Loading } from '../Shared';\nimport { Button, FileInput, Heading, Text } from 'grommet';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  content: {\n    width: 'calc(100% - 2rem)',\n    maxWidth: '30rem'\n  },\n  actions: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  },\n  fileInput: {\n    marginTop: '1rem',\n    marginBottom: '1rem'\n  },\n  actionBtn: {\n    minWidth: 'calc(50% - 0.5rem)',\n    marginBottom: '1rem'\n  }\n})\n\nexport const Upload = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  \n  const [loading, setLoading] = useState<boolean>(false);\n  const [file, setFile] = useState<File>();\n\n  function handleFileInput(event: React.ChangeEvent<HTMLInputElement>) {\n    const uploadedFile = event.target.files?.item(0);\n\n    if (uploadedFile) {\n      setFile(uploadedFile);\n    }\n  }\n\n  async function handleSubmit() {\n    if (file) {\n      setLoading(true);\n      await ActivityService.upload(file);\n      setLoading(false);\n      history.push('/activities');\n    }\n  }\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.content}>\n        <Heading id=\"inputGroupFileAddon01\" level='2'>Upload</Heading>\n        \n        <Text>Accepted file types: '.gpx'</Text>\n        <div className={classes.fileInput}>\n          <FileInput\n            onChange={handleFileInput}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Link to='/activities' className={classes.actionBtn}>\n            <Button\n              type=\"button\"\n              label='Go Back'\n              fill=\"horizontal\"\n            />\n          </Link>\n          <Button\n            label='Submit'\n            type='submit'\n            className={classes.actionBtn}\n            onClick={handleSubmit}\n            disabled={!file}\n          />\n        </div>\n        { loading && (<Loading />) }\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { Activities } from './Activities';\nimport { DetailedActivity } from './DetailedActivity';\nimport { Upload } from './Upload';\n\nexport const ActivityRoutes = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <Activities />\n      </Route>\n      <Route path={`${path}/upload`}>\n        <Upload />\n      </Route>\n      <Route path={`${path}/:activityId`}>\n        <DetailedActivity />\n      </Route>\n    </Switch>\n  )\n}","import React from 'react';\nimport {\n  Switch,\n  Route,\n  HashRouter\n} from 'react-router-dom';\n\nimport { ActivityRoutes } from './Activities';\nimport { Grommet } from 'grommet';\n\nfunction App() {\n  return (\n    <Grommet>\n      <HashRouter>\n        <Switch>\n          <Route path='/activities'>\n            <ActivityRoutes />\n          </Route>\n          <Route path='/' exact>\n            <ActivityRoutes />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </Grommet>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport makeServer from './mocks/server';\n\nif (process.env.NODE_ENV === \"development\") {\n  makeServer()\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}