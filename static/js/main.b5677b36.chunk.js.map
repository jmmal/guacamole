{"version":3,"sources":["Activities/Filters.tsx","Shared/formatters.ts","Shared/Loading.tsx","Shared/Mapbox.tsx","Activities/ActivityPreview.tsx","Activities/hooks/useInfiniteActivities.ts","Activities/ActivityList.tsx","Activities/Activities.tsx","Shared/utils.ts","Charts/ElevationChart.tsx","Charts/PaceChart.tsx","Charts/SplitsChart.tsx","Charts/HeartRateChart.tsx","Activities/DetailedActivity.tsx","Activities/Upload.tsx","Activities/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Filters","onFilterChange","filters","useState","setFilters","useEffect","fetch","baseUrl","then","resp","json","useFilters","filter","setFilter","options","setOptions","length","totalCount","reduce","prev","curr","total","all","label","value","map","type","Select","a11yTitle","labelKey","placeholder","size","onChange","e","option","formatPace","minutes","Math","floor","seconds","padStart","formatDuration","totalMinutes","totalHours","useStyles","createUseStyles","container","width","display","justifyContent","margin","Loading","css","className","color","height","Mapbox","polyline","mapContainer","useRef","setupMap","geojson","mapboxPoly","bounds","coords","bbox","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","coord","min","max","getBoundingBox","coordinates","mapboxgl","current","style","fitBoundsOptions","padding","top","bottom","left","right","accessToken","process","addControl","scrollZoom","disable","on","addSource","data","properties","geometry","addLayer","id","source","layout","paint","ref","image","preview","borderRadius","border","boxShadow","marginBottom","header","alignItems","flexWrap","stats","gap","ActivityPreview","activity","index","history","useHistory","openActivity","push","_id","heartRate","avg","aria-posinset","tabIndex","onClick","onKeyDown","event","key","Heading","level","format","Date","startTime","Text","title","imageURL","src","alt","distance","toFixed","pace","elevation","elapsedTime","FooterColumn","Box","direction","useInfiniteActivities","loading","setLoading","activities","setActivities","hasNextPage","setHasNextPage","setTotalCount","page","setPage","undefined","onLoadMore","a","params","URLSearchParams","append","toString","response","result","useActivities","useInView","inView","timer","setTimeout","clearTimeout","paddingBottom","ActivityList","role","aria-label","aria-busy","main","flexDirection","paddingTop","paddingLeft","paddingRight","mainContent","maxWidth","Activities","classes","justify","UploadButton","to","Button","primary","fill","range","from","i","ElevationChart","points","point","altitude","ticks","ResponsiveContainer","AreaChart","CartesianGrid","strokeDasharray","XAxis","dataKey","unit","interval","YAxis","allowDecimals","Tooltip","labelFormatter","d","formatter","Area","isAnimationActive","stroke","PaceChart","speed","filterStanding","LineChart","tickCount","minTickGap","reversed","val","Line","dot","SplitsChart","currentSplit","time","forEach","getTime","name","lastPoint","dist","calculateSplits","BarChart","Bar","HeartRateChart","streamData","DetailedActivityContainer","activityId","useParams","setActivity","loadActivities","handleGoBack","goBack","position","borderBottom","zIndex","backgroundColor","headerLayout","gridTemplateColumns","marginAuto","marginRight","statsHeader","DetailedActivity","icon","Previous","content","actions","fileInput","marginTop","actionBtn","minWidth","Upload","file","setFile","uploadResponse","uploadURL","method","headers","body","FileInput","uploadedFile","target","files","item","disabled","ActivityRoutes","path","useRouteMatch","exact","App","Grommet","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b5677b36.chunk.js","sourcesContent":["import { Select } from \"grommet\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { ActivityTypeAggregation } from \"./models\";\n\nconst baseUrl = process.env.REACT_APP_BASE_API_URL;\n\nconst useFilters = () => {\n  const [filters, setFilters] = useState<ActivityTypeAggregation[]>([]);\n\n  useEffect(() => {\n    fetch(baseUrl + \"/filters\")\n      .then((resp) => resp.json())\n      .then((json) => setFilters(json));\n  }, []);\n\n  return {\n    filters,\n  };\n};\n\ntype FiltersProps = {\n  onFilterChange: (filter: string) => void;\n};\n\ntype SelectOption = {\n  label: string;\n  value: string;\n};\n\nexport const Filters = ({ onFilterChange }: FiltersProps) => {\n  const { filters } = useFilters();\n  const [filter, setFilter] = useState<SelectOption>();\n  const [options, setOptions] = useState<SelectOption[]>([]);\n\n  useEffect(() => {\n    if (filters.length === 0) {\n      return;\n    }\n\n    const totalCount = filters.reduce((prev, curr) => prev + curr.total, 0);\n    const all: SelectOption = {\n      label: `All (${totalCount})`,\n      value: \"All\",\n    };\n\n    const options: SelectOption[] = [\n      all,\n      ...filters.map((filter) => {\n        return {\n          label: filter.type + ` (${filter.total})`,\n          value: filter.type,\n        };\n      }),\n    ];\n\n    setFilter(all);\n    setOptions(options);\n  }, [filters]);\n\n  const handleSelect = (e: any) => {\n    setFilter(e.option);\n    onFilterChange(e.option.value);\n  };\n\n  return (\n    <Select\n      a11yTitle=\"Filter by activity type\"\n      options={options}\n      labelKey=\"label\"\n      placeholder=\"-\"\n      value={filter}\n      size=\"small\"\n      onChange={handleSelect}\n    />\n  );\n};\n","/**\n * Converts a number value (representing a speed in m/s) into a string representation\n * of the value in Minutes / Kilometer\n */\nexport const formatPace = (value: number): string => {\n  const minutes = Math.floor(value / 60);\n  const seconds = `${Math.floor(value - minutes * 60)}`;\n\n  return `${minutes}:${seconds.padStart(2, '0')}`;\n};\n\n/**\n * Converts value (representing a duration in seconds) into a string formatted\n * as hh mm ss\n * e.g. 1h 28m or 28m 10s\n */\nexport const formatDuration = (value: number): string => {\n  const totalMinutes = Math.floor(value / 60);\n  const totalHours = Math.floor(totalMinutes / 60);\n  const seconds = Math.floor(value - totalMinutes * 60);\n\n  if (totalHours >= 1) {\n    return `${totalHours}h ${totalMinutes % 60}m`;\n  }\n\n  return `${totalMinutes}m ${seconds}s`;\n};\n","import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { BeatLoader } from \"react-spinners\";\n\nconst useStyles = createUseStyles({\n  container: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"2rem 0\",\n  },\n});\n\nexport const Loading = () => {\n  const css = useStyles();\n\n  return (\n    <div className={css.container}>\n      <BeatLoader size=\"30px\" margin=\"4px\" color=\"#7D4CDB\" />\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\n\nimport * as mapboxgl from \"mapbox-gl\";\nimport * as mapboxPoly from \"@mapbox/polyline\";\nimport { createUseStyles } from \"react-jss\";\n\nconst getBoundingBox = (coords: any[]) => {\n  const bbox = [\n    Number.POSITIVE_INFINITY,\n    Number.POSITIVE_INFINITY,\n    Number.NEGATIVE_INFINITY,\n    Number.NEGATIVE_INFINITY,\n  ];\n\n  return coords.reduce((prev, coord) => {\n    return [\n      Math.min(coord[0], prev[0]),\n      Math.min(coord[1], prev[1]),\n      Math.max(coord[0], prev[2]),\n      Math.max(coord[1], prev[3]),\n    ];\n  }, bbox);\n};\n\nconst useStyles = createUseStyles({\n  map: {\n    height: \"25rem\",\n  },\n});\n\ntype MapboxProps = {\n  polyline: string;\n};\n\nexport const Mapbox = ({ polyline }: MapboxProps) => {\n  const mapContainer = useRef(null);\n  const css = useStyles();\n\n  useEffect(() => {\n    setupMap();\n  });\n\n  const setupMap = (): void => {\n    const geojson = mapboxPoly.toGeoJSON(polyline);\n    const bounds = getBoundingBox(geojson.coordinates);\n\n    const map = new mapboxgl.Map({\n      container: mapContainer.current || \"\",\n      style: \"mapbox://styles/mapbox/outdoors-v11\",\n      bounds: new mapboxgl.LngLatBounds(bounds),\n      fitBoundsOptions: {\n        padding: {\n          top: 40,\n          bottom: 40,\n          left: 40,\n          right: 40,\n        },\n      },\n      accessToken: process.env.REACT_APP_MAPBOX_PUBLIC_KEY,\n    });\n\n    // Add map controls\n    map.addControl(new mapboxgl.NavigationControl());\n    map.scrollZoom.disable();\n\n    map.on(\"load\", () => {\n      map.addSource(\"route\", {\n        type: \"geojson\",\n        data: {\n          type: \"Feature\",\n          properties: {},\n          geometry: {\n            type: \"LineString\",\n            coordinates: geojson.coordinates,\n          },\n        },\n      });\n      map.addLayer({\n        id: \"route\",\n        type: \"line\",\n        source: \"route\",\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\",\n        },\n        paint: {\n          \"line-color\": \"#008DD5\",\n          \"line-width\": 4,\n        },\n      });\n    });\n  };\n\n  return <div ref={mapContainer} className={css.map}></div>;\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { format } from \"date-fns\";\n\nimport { Activity } from \"./models\";\nimport { formatDuration, formatPace } from \"../Shared\";\nimport { createUseStyles } from \"react-jss\";\nimport { Box, Heading, Text } from \"grommet\";\n\ntype ActivityPreviewProps = {\n  activity: Activity;\n  index: number;\n  totalCount?: number;\n};\n\nconst useStyles = createUseStyles({\n  image: {\n    width: \"100%\",\n  },\n  preview: {\n    borderRadius: 3,\n    border: \"1px solid #e2e2e2\",\n    boxShadow: \"0px 8px 24px rgba(13,13,18,0.04)\",\n    padding: \"1rem 1rem 1rem 1rem\",\n    marginBottom: \"1rem\",\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    marginBottom: \"0.5rem\",\n  },\n  stats: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    gap: \"1rem\",\n  },\n});\n\nexport const ActivityPreview = ({ activity, index }: ActivityPreviewProps) => {\n  const history = useHistory();\n  const css = useStyles();\n\n  function openActivity() {\n    history.push(`/activities/${activity._id}`);\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent) {\n    if (event.key === \"ENTER\") {\n      openActivity();\n    }\n  }\n\n  const { avg, min, max } = activity.heartRate;\n\n  return (\n    <article\n      className={css.preview}\n      aria-posinset={index}\n      tabIndex={0}\n      onClick={openActivity}\n      onKeyDown={handleKeyDown}\n    >\n      <div className={css.header}>\n        <Heading margin=\"none\" level=\"4\">\n          {format(new Date(activity.startTime), \"EEEE, LLLL d, yyyy\")}\n        </Heading>\n        <Text>{activity.title}</Text>\n      </div>\n\n      {activity.imageURL && (\n        <img\n          src={activity.imageURL}\n          alt=\"Activity GPS preview\"\n          className={css.image}\n        />\n      )}\n\n      <div className={css.stats}>\n        <FooterColumn\n          title=\"Distance\"\n          value={`${Number(activity.distance / 1000).toFixed(2)} km`}\n        />\n        <FooterColumn\n          title=\"Pace\"\n          value={`${formatPace(activity.pace.avg ?? 0)} min / km`}\n        />\n        <FooterColumn\n          title=\"Elevation\"\n          value={`${Number(\n            (activity.elevation.max ?? 0) - (activity.elevation.min ?? 0)\n          ).toFixed(1)} m`}\n        />\n        <FooterColumn\n          title=\"Elapsed Time\"\n          value={formatDuration(activity.elapsedTime)}\n        />\n        {activity.heartRate.avg && (\n          <FooterColumn title=\"Heart Rate\" value={`${min}/${avg}/${max}`} />\n        )}\n      </div>\n    </article>\n  );\n};\n\ntype FooterColumnProps = {\n  title: string;\n  value: string;\n};\n\nconst FooterColumn = ({ title, value }: FooterColumnProps) => {\n  return (\n    <Box direction=\"column\">\n      <Text className=\"title\">{title}</Text>\n      <Text className=\"value mb-0\">{value}</Text>\n    </Box>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { useInView } from 'react-intersection-observer';\n\nimport { Activity, GetAllResponse } from '../models';\n\nconst baseUrl = process.env.REACT_APP_BASE_API_URL;\n\nconst useActivities = (filter: string) => {\n  const [loading, setLoading] = useState(false);\n  const [activities, setActivities] = useState<Activity[]>([]);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [totalCount, setTotalCount] = useState<number>();\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (activities.length === totalCount) {\n      setHasNextPage(false);\n    }\n  }, [activities, totalCount]);\n\n  // Reset the state if the filter changes\n  useEffect(() => {\n    setActivities([]);\n    setPage(1);\n    setHasNextPage(true);\n    setTotalCount(undefined);\n  }, [filter]);\n\n  const onLoadMore = async () => {\n    setLoading(true);\n    const params = new URLSearchParams();\n    params.append('page', page.toString());\n    params.append('pageSize', '5');\n\n    if (filter !== '' && filter !== 'All') {\n      params.append('type', filter);\n    }\n    setPage(page + 1);\n\n    const response: Response = await fetch(\n      baseUrl + '/activities?' + params.toString()\n    );\n    const result: GetAllResponse = await response.json();\n\n    setTotalCount(result.total);\n    setActivities((current) => [...current, ...result.data]);\n    setLoading(false);\n  };\n\n  return {\n    loading,\n    activities,\n    hasNextPage,\n    onLoadMore,\n    totalCount,\n  };\n};\n\nexport const useInfiniteActivities = (filter: string) => {\n  const {\n    loading,\n    activities,\n    hasNextPage,\n    onLoadMore,\n    totalCount,\n  } = useActivities(filter);\n  const { ref, inView } = useInView();\n\n  useEffect(() => {\n    if (!loading && inView && hasNextPage) {\n      // Using a setTimeout to prevent an extra call that happens during the render phase\n      const timer = setTimeout(() => {\n        onLoadMore();\n      }, 100);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [onLoadMore, loading, inView, hasNextPage]);\n\n  return {\n    ref,\n    activities,\n    loading,\n    hasNextPage,\n    totalCount,\n  };\n};\n","import React from \"react\";\n\nimport { ActivityPreview } from \"./ActivityPreview\";\nimport { Loading } from \"../Shared\";\nimport { useInfiniteActivities } from \"./hooks/useInfiniteActivities\";\nimport { createUseStyles } from \"react-jss\";\n\ntype ActivityListProps = {\n  filter: string;\n};\n\nconst useStyles = createUseStyles({\n  container: {\n    paddingBottom: \"2rem\",\n  },\n});\n\nexport const ActivityList = ({ filter }: ActivityListProps) => {\n  const {\n    ref,\n    activities,\n    loading,\n    hasNextPage,\n    totalCount,\n  } = useInfiniteActivities(filter);\n  const css = useStyles();\n\n  return (\n    <div\n      role=\"feed\"\n      aria-label=\"Feed of activities sorted by most recent\"\n      aria-busy={loading}\n      className={css.container}\n    >\n      {activities.map((activity, index) => (\n        <ActivityPreview\n          key={activity._id}\n          activity={activity}\n          index={index}\n          totalCount={totalCount}\n        />\n      ))}\n      {loading && <Loading />}\n      {hasNextPage && <span ref={ref} />}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { Filters } from \"./Filters\";\nimport { ActivityList } from \"./ActivityList\";\n\nimport { Box, Button } from \"grommet\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles({\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"1rem\",\n    paddingLeft: \"1rem\",\n    paddingRight: \"1rem\",\n  },\n  mainContent: {\n    maxWidth: \"100%\",\n    width: \"min(50rem, 100%)\",\n  },\n  header: {\n    marginBottom: \"1.5rem\",\n  },\n});\n\nexport const Activities = () => {\n  const [filter, setFilter] = useState(\"\");\n  const classes = useStyles();\n  return (\n    <main className={classes.main}>\n      <div className={classes.mainContent}>\n        <header className={classes.header}>\n          <Box direction=\"row\" justify=\"between\">\n            <UploadButton />\n            <Filters onFilterChange={setFilter} />\n          </Box>\n        </header>\n        <ActivityList filter={filter} />\n      </div>\n    </main>\n  );\n};\n\nconst UploadButton = () => {\n  return (\n    <Link to=\"/activities/upload\">\n      <Button primary label=\"Upload\" fill=\"vertical\"></Button>\n    </Link>\n  );\n};\n","export const range = (from: number, to: number): number[] => {\n  const result = [];\n  for (let i = from; i <= to; i++) {\n    result.push(i);\n  }\n  return result;\n};\n","import React from \"react\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { DataPoint } from \"../Activities/models\";\nimport { range } from \"../Shared/utils\";\n\ntype ElevationChartProps = {\n  points: DataPoint[];\n  distance: number;\n};\n\nconst ElevationChart = ({ points, distance }: ElevationChartProps) => {\n  const data = points\n    .filter((point) => {\n      return point.altitude && point.distance;\n    })\n    .map((point) => {\n      const elevation = point.altitude as number;\n      const distance = point.distance as number;\n\n      return {\n        // TODO: Maybe be better to label with time\n        distance: Number(distance / 1000).toFixed(1),\n        elevation: Number(elevation).toFixed(1),\n      };\n    });\n\n  const ticks = range(0, distance / 1000);\n\n  const tooltipLabelFormat = (d: any) => {\n    return `Distance: ${d}km`;\n  };\n\n  const valueFormatter = (d: any) => {\n    return `${d}m`;\n  };\n\n  return (\n    <ResponsiveContainer height={250} width=\"100%\">\n      <AreaChart\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"distance\" ticks={ticks} unit={\"km\"} interval={1} />\n        <YAxis allowDecimals={false} unit={\"m\"} />\n        <Tooltip\n          labelFormatter={tooltipLabelFormat}\n          formatter={valueFormatter}\n        />\n        <Area\n          isAnimationActive={false}\n          type=\"monotone\"\n          dataKey=\"elevation\"\n          stroke=\"#8884d8\"\n          fill=\"#8884d8\"\n        />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default ElevationChart;\n","import React from \"react\";\n\nimport {\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n} from \"recharts\";\nimport { DataPoint } from \"../Activities/models\";\nimport { formatPace } from \"../Shared\";\n\ntype PaceChartProps = {\n  points: DataPoint[];\n};\n\nconst MetersPerSecondToMinutesPerKMConversionFactor = 1000 / 60;\n\nconst PaceChart = ({ points }: PaceChartProps) => {\n  let data = points\n    .filter((point) => {\n      return point.distance && point.speed;\n    })\n    .map((point) => {\n      return {\n        distance: Number((point.distance as number) / 1000).toFixed(1),\n        pace:\n          MetersPerSecondToMinutesPerKMConversionFactor / Number(point.speed),\n      };\n    });\n\n  data = filterStanding(data);\n\n  const valFormatter = (d: any) => {\n    const val = d * 60;\n    return `${formatPace(val)} min / km`;\n  };\n\n  return (\n    <ResponsiveContainer height={250} width=\"100%\">\n      <LineChart\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"distance\"\n          allowDecimals={false}\n          tickCount={4}\n          unit={\"km\"}\n          minTickGap={20}\n        />\n        <YAxis allowDecimals={false} reversed />\n        <Tooltip\n          formatter={valFormatter}\n          labelFormatter={(val) => `${val}km`}\n        />\n        <Line type=\"monotone\" dataKey=\"pace\" stroke=\"#8884d8\" dot={false} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nfunction filterStanding(data: any[]) {\n  return data.filter((point) => point.pace <= 20);\n}\n\nexport default PaceChart;\n","import React from \"react\";\n\nimport {\n  Bar,\n  BarChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { DataPoint } from \"../Activities/models\";\n\ntype SplitsChartProps = {\n  points: DataPoint[];\n};\n\nconst SplitsChart = ({ points }: SplitsChartProps) => {\n  const data = calculateSplits(points);\n\n  function calculateSplits(points: DataPoint[]) {\n    const data: object[] = [];\n\n    if (!points.length || points.length === 0) {\n      return data;\n    }\n\n    let currentSplit = 1; // 1st KM\n    let startTime = points[0].time!;\n\n    const filtered = points.filter((point) => {\n      return point.distance && point.time;\n    });\n\n    filtered.forEach((point, i) => {\n      if (point.distance! < currentSplit * 1000) {\n        return;\n      }\n\n      const seconds =\n        (new Date(point.time!).getTime() - new Date(startTime).getTime()) /\n        1000;\n\n      data.push({\n        name: currentSplit,\n        value: Number(1000 / seconds).toFixed(4),\n      });\n      currentSplit++;\n      startTime = point.time!;\n    });\n\n    const lastPoint = points[points.length - 1];\n    const seconds =\n      (new Date(lastPoint.time!).getTime() - new Date(startTime).getTime()) /\n      1000;\n\n    const dist = (lastPoint.distance! as number) - 1000 * (currentSplit - 1);\n\n    // If the last split is less than 100m, ignore it\n    if (dist < 100) {\n      return data;\n    }\n\n    data.push({\n      name: currentSplit,\n      value: Number(seconds / dist).toFixed(2),\n    });\n\n    return data;\n  }\n\n  return (\n    <ResponsiveContainer height={250} width=\"100%\">\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Bar dataKey=\"value\" fill=\"#6fd450\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default SplitsChart;\n","import React from \"react\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport { range } from \"../Shared/utils\";\nimport { DataPoint } from \"../Activities/models\";\n\nexport type Props = {\n  streamData: DataPoint[];\n  distance: number;\n};\n\nexport const HeartRateChart = ({ streamData, distance }: Props) => {\n  const data = streamData\n    .filter((point) => {\n      return point?.heartRate && point?.distance;\n    })\n    .map((point) => {\n      return {\n        distance: +Number(point.distance! / 1000).toFixed(2),\n        heartRate: point.heartRate,\n      };\n    });\n\n  const ticks = range(0, Number(distance / 1000));\n\n  return (\n    <>\n      {data && (\n        <ResponsiveContainer height={250} width=\"100%\">\n          <AreaChart\n            data={data}\n            margin={{\n              top: 10,\n              right: 30,\n              left: 30,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"distance\" unit={\"km\"} ticks={ticks} />\n            <YAxis allowDecimals={true} unit={\"bpm\"} />\n            <Tooltip />\n            <Area\n              isAnimationActive={false}\n              type=\"monotone\"\n              dataKey=\"heartRate\"\n              stroke=\"#F87666\"\n              fill=\"#F87666\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport { Previous } from \"grommet-icons\";\nimport { format } from \"date-fns\";\n\nimport { Mapbox } from \"../Shared\";\nimport { Activity } from \"./models\";\nimport { Loading } from \"../Shared\";\nimport {\n  ElevationChart,\n  PaceChart,\n  SplitsChart,\n  HeartRateChart,\n} from \"../Charts\";\nimport { createUseStyles } from \"react-jss\";\nimport { Button, Heading } from \"grommet\";\n\ninterface DetailedActivityParams {\n  activityId: string;\n}\n\nconst baseUrl = process.env.REACT_APP_BASE_API_URL;\n\nconst DetailedActivityContainer = () => {\n  const history = useHistory();\n  const { activityId } = useParams<DetailedActivityParams>();\n\n  const [activity, setActivity] = useState<Activity>();\n\n  useEffect(() => {\n    loadActivities(activityId);\n  }, [activityId]);\n\n  async function loadActivities(id: string) {\n    const response = await fetch(baseUrl + \"/activities/\" + id);\n    const json = await response.json();\n\n    setActivity(json);\n  }\n\n  function goBack() {\n    history.goBack();\n  }\n\n  return <DetailedActivity activity={activity} handleGoBack={goBack} />;\n};\n\ntype DetailedActivityProps = {\n  activity?: Activity;\n  handleGoBack(): void;\n};\n\nconst useStyles = createUseStyles({\n  header: {\n    position: \"sticky\",\n    top: 0,\n    borderBottom: \"1px solid #e0e0e0\",\n    zIndex: 1000,\n    backgroundColor: \"white\",\n    padding: \"1rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  headerLayout: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr auto 1fr\",\n    justifyContent: \"center\",\n    maxWidth: \"55rem\",\n    width: \"100%\",\n  },\n  marginAuto: {\n    margin: \"auto\",\n    marginRight: 0,\n  },\n  statsHeader: {\n    padding: \"0rem 1rem\",\n  },\n});\n\nconst DetailedActivity = ({\n  activity,\n  handleGoBack,\n}: DetailedActivityProps) => {\n  const css = useStyles();\n\n  return (\n    <div className=\"activity-component\">\n      <div className={css.header}>\n        <div className={css.headerLayout}>\n          <div>\n            <Button\n              onClick={handleGoBack}\n              icon={<Previous />}\n              label=\"Activities\"\n              size=\"small\"\n            />\n          </div>\n          <Heading level=\"3\" className={css.marginAuto}>\n            {activity?.type ? activity.type : \"Loading\"}\n          </Heading>\n        </div>\n      </div>\n\n      {activity?.polyline && <Mapbox polyline={activity.polyline} />}\n      {activity && activity.streamData ? (\n        <>\n          <Heading level=\"2\" className={css.statsHeader}>{`${format(\n            new Date(activity.startTime),\n            \"EEEE, LLLL d, yyyy\"\n          )} at ${format(new Date(activity.startTime), \"HH:mm aaa\")}`}</Heading>\n\n          <Heading level=\"3\" className={css.statsHeader}>\n            Heart Rate\n          </Heading>\n          <HeartRateChart\n            streamData={activity.streamData}\n            distance={activity.distance}\n          />\n\n          <Heading level=\"3\" className={css.statsHeader}>\n            Elevation\n          </Heading>\n          <ElevationChart\n            points={activity.streamData}\n            distance={activity.distance}\n          />\n\n          <Heading level=\"3\" className={css.statsHeader}>\n            Pace\n          </Heading>\n          <PaceChart points={activity.streamData} />\n\n          <Heading level=\"3\" className={css.statsHeader}>\n            Splits\n          </Heading>\n          <SplitsChart points={activity.streamData} />\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport { DetailedActivityContainer as DetailedActivity };\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { Loading } from \"../Shared\";\nimport { Button, FileInput, Heading, Text } from \"grommet\";\nimport { createUseStyles } from \"react-jss\";\n\ntype SignedURL = {\n  uploadURL: string;\n};\n\nconst baseUrl = process.env.REACT_APP_BASE_API_URL;\n\nconst useStyles = createUseStyles({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  content: {\n    width: \"calc(100% - 2rem)\",\n    maxWidth: \"30rem\",\n  },\n  actions: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n  },\n  fileInput: {\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\",\n  },\n  actionBtn: {\n    minWidth: \"calc(50% - 0.5rem)\",\n    marginBottom: \"1rem\",\n  },\n});\n\nexport const Upload = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [file, setFile] = useState<File>();\n\n  function handleFileInput(event: React.ChangeEvent<HTMLInputElement>) {\n    const uploadedFile = event.target.files?.item(0);\n\n    if (uploadedFile) {\n      setFile(uploadedFile);\n    }\n  }\n\n  async function handleSubmit() {\n    if (file) {\n      setLoading(true);\n      const params = new URLSearchParams();\n      params.append(\"filename\", file.name);\n\n      const uploadResponse: Response = await fetch(\n        baseUrl + \"/upload?\" + params.toString()\n      );\n      const response: SignedURL = await uploadResponse.json();\n\n      await fetch(response.uploadURL, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"binary/octet-stream\",\n        },\n        body: file,\n      });\n\n      setLoading(false);\n      history.push(\"/activities\");\n    }\n  }\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.content}>\n        <Heading id=\"inputGroupFileAddon01\" level=\"2\">\n          Upload\n        </Heading>\n\n        <Text>Accepted file types: '.gpx'</Text>\n        <div className={classes.fileInput}>\n          <FileInput onChange={handleFileInput} />\n        </div>\n        <div className={classes.actions}>\n          <Link to=\"/activities\" className={classes.actionBtn}>\n            <Button type=\"button\" label=\"Go Back\" fill=\"horizontal\" />\n          </Link>\n          <Button\n            label=\"Submit\"\n            type=\"submit\"\n            className={classes.actionBtn}\n            onClick={handleSubmit}\n            disabled={!file}\n          />\n        </div>\n        {loading && <Loading />}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport { Activities } from \"./Activities\";\nimport { DetailedActivity } from \"./DetailedActivity\";\nimport { Upload } from \"./Upload\";\n\nexport const ActivityRoutes = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <Activities />\n      </Route>\n      <Route path={`${path}/upload`}>\n        <Upload />\n      </Route>\n      <Route path={`${path}/:activityId`}>\n        <DetailedActivity />\n      </Route>\n    </Switch>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\n\nimport { ActivityRoutes } from \"./Activities\";\nimport { Grommet } from \"grommet\";\n\nfunction App() {\n  return (\n    <Grommet>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/activities\">\n            <ActivityRoutes />\n          </Route>\n          <Route path=\"/\" exact>\n            <ActivityRoutes />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </Grommet>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport makeServer from \"./mocks/server\";\n\nif (process.env.NODE_ENV === \"development\") {\n  makeServer();\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}