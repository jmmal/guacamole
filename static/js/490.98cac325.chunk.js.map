{"version":3,"file":"static/js/490.98cac325.chunk.js","mappings":"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","sources":["Shared/utils/range.ts","Charts/ElevationChart.tsx","Charts/PaceChart.tsx","Charts/SplitsChart.tsx","Charts/HeartRateChart.tsx","Activities/DetailedActivity.tsx","Shared/components/Loading.tsx","Shared/components/Mapbox.tsx"],"sourcesContent":["export const range = (from: number, to: number): number[] => {\n  const result = [];\n  for (let i = from; i <= to; i++) {\n    result.push(i);\n  }\n  return result;\n};\n","import React from \"react\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { DataPoint } from \"../Shared/types\";\nimport { range } from \"../Shared/utils\";\n\ntype ElevationChartProps = {\n  points: DataPoint[];\n  distance: number;\n};\n\nconst ElevationChart = ({ points, distance }: ElevationChartProps) => {\n  const data = points\n    .filter((point) => {\n      return point.altitude && point.distance;\n    })\n    .map((point) => {\n      const elevation = point.altitude as number;\n      const distance = point.distance as number;\n\n      return {\n        // TODO: Maybe be better to label with time\n        distance: Number(distance / 1000).toFixed(1),\n        elevation: Number(elevation).toFixed(1),\n      };\n    });\n\n  const ticks = range(0, distance / 1000);\n\n  const tooltipLabelFormat = (d: any) => {\n    return `Distance: ${d}km`;\n  };\n\n  const valueFormatter = (d: any) => {\n    return `${d}m`;\n  };\n\n  return (\n    <ResponsiveContainer height={250} width=\"100%\">\n      <AreaChart\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"distance\" ticks={ticks} unit={\"km\"} interval={1} />\n        <YAxis allowDecimals={false} unit={\"m\"} />\n        <Tooltip\n          labelFormatter={tooltipLabelFormat}\n          formatter={valueFormatter}\n        />\n        <Area\n          isAnimationActive={false}\n          type=\"monotone\"\n          dataKey=\"elevation\"\n          stroke=\"#8884d8\"\n          fill=\"#8884d8\"\n        />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default ElevationChart;\n","import {\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n} from \"recharts\";\nimport { DataPoint } from \"../Shared/types\";\nimport { formatPace } from \"../Shared/formatters\";\nimport { useCallback } from \"react\";\n\ntype PaceChartProps = {\n  points: DataPoint[];\n};\n\nconst MetersPerSecondToMinutesPerKMConversionFactor = 1000 / 60;\n\nconst PaceChart = ({ points }: PaceChartProps) => {\n  let data = points\n    .filter((point) => {\n      return point.distance && point.speed;\n    })\n    .map((point) => {\n      return {\n        distance: Number((point.distance as number) / 1000).toFixed(1),\n        Pace:\n          MetersPerSecondToMinutesPerKMConversionFactor / Number(point.speed),\n      };\n    });\n\n  data = filterStanding(data);\n\n  const valFormatter = useCallback((d: any) => {\n    const val = d * 60;\n    return `${formatPace(val)} min / km`;\n  }, []);\n  const labelFormatted = useCallback((d: any) => {\n    return `${d}km`;\n  }, []);\n\n  return (\n    <ResponsiveContainer height={250} width=\"100%\">\n      <LineChart\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"distance\" unit={\"km\"} />\n        <YAxis allowDecimals={false} reversed />\n        <Tooltip formatter={valFormatter} labelFormatter={labelFormatted} />\n        <Line type=\"monotone\" dataKey=\"Pace\" stroke=\"#8884d8\" dot={false} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nfunction filterStanding(data: any[]) {\n  return data.filter((point) => point.Pace <= 20);\n}\n\nexport default PaceChart;\n","import { useCallback } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { formatPace } from \"../Shared/formatters\";\nimport { DataPoint } from \"../Shared/types\";\n\ntype SplitsChartProps = {\n  points: DataPoint[];\n};\n\nconst MetersPerSecondToMinutesPerKMConversionFactor = 1000 / 60;\n\nconst SplitsChart = ({ points }: SplitsChartProps) => {\n  const data = calculateSplits(points);\n\n  function calculateSplits(points: DataPoint[]) {\n    const data: object[] = [];\n\n    if (!points.length || points.length === 0) {\n      return data;\n    }\n\n    let currentSplit = 1; // 1st KM\n    let startTime = points[0].time!;\n\n    const filtered = points.filter((point) => {\n      return point.distance && point.time;\n    });\n\n    filtered.forEach((point, i) => {\n      if (point.distance! < currentSplit * 1000) {\n        return;\n      }\n\n      const seconds =\n        (new Date(point.time!).getTime() - new Date(startTime).getTime()) /\n        1000;\n\n      data.push({\n        name: currentSplit,\n        value:\n          MetersPerSecondToMinutesPerKMConversionFactor /\n          Number(1000 / seconds),\n      });\n      currentSplit++;\n      startTime = point.time!;\n    });\n\n    const lastPoint = points[points.length - 1];\n    const seconds =\n      (new Date(lastPoint.time!).getTime() - new Date(startTime).getTime()) /\n      1000;\n\n    const dist = (lastPoint.distance! as number) - 1000 * (currentSplit - 1);\n\n    // If the last split is less than 100m, ignore it\n    if (dist < 100) {\n      return data;\n    }\n\n    data.push({\n      name: currentSplit,\n      value:\n        MetersPerSecondToMinutesPerKMConversionFactor / Number(dist / seconds),\n    });\n\n    return data;\n  }\n\n  const valFormatter = useCallback((d: any) => {\n    const val = d * 60;\n    return `${formatPace(val)} min / km`;\n  }, []);\n\n  return (\n    <ResponsiveContainer height={500} width=\"100%\">\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" unit=\"km\" />\n        <YAxis />\n        <Tooltip labelFormatter={(d) => `${d}km`} formatter={valFormatter} />\n        <Bar dataKey=\"value\" fill=\"#6fd450\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default SplitsChart;\n","import React from \"react\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport { range } from \"../Shared/utils\";\nimport { DataPoint } from \"../Shared/types\";\nimport { useCallback } from \"react\";\n\nexport type Props = {\n  streamData: DataPoint[];\n  distance: number;\n};\n\nexport const HeartRateChart = ({ streamData, distance }: Props) => {\n  const data = streamData\n    .filter((point) => {\n      return point?.heartRate && point?.distance;\n    })\n    .map((point) => {\n      return {\n        distance: +Number(point.distance! / 1000).toFixed(2),\n        heartRate: point.heartRate,\n      };\n    });\n\n  const ticks = range(0, Number(distance / 1000));\n\n  const tooltipLabelFormat = useCallback((d: any) => {\n    return `Distance: ${d}km`;\n  }, []);\n\n  const valueFormatter = useCallback((d: any) => {\n    return `${d}bpm`;\n  }, []);\n\n  return (\n    <>\n      {data && (\n        <ResponsiveContainer height={250} width=\"100%\">\n          <AreaChart\n            data={data}\n            margin={{\n              top: 10,\n              right: 30,\n              left: 0,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"distance\" unit={\"km\"} ticks={ticks} />\n            <YAxis allowDecimals={true} />\n            <Tooltip\n              labelFormatter={tooltipLabelFormat}\n              formatter={valueFormatter}\n            />\n            <Area\n              isAnimationActive={false}\n              type=\"monotone\"\n              dataKey=\"heartRate\"\n              stroke=\"#F87666\"\n              fill=\"#F87666\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      )}\n    </>\n  );\n};\n","import { Previous } from \"grommet-icons\";\nimport { format } from \"date-fns\";\n\nimport { Mapbox, Loading } from \"../Shared/components\";\nimport { Activity } from \"../Shared/types\";\nimport {\n  ElevationChart,\n  PaceChart,\n  SplitsChart,\n  HeartRateChart,\n} from \"../Charts\";\nimport { createUseStyles } from \"react-jss\";\nimport { Button, Heading } from \"grommet\";\n\ntype DetailedActivityProps = {\n  activity?: Activity;\n  handleGoBack(): void;\n};\n\nconst useStyles = createUseStyles({\n  header: {\n    position: \"sticky\",\n    top: 0,\n    borderBottom: \"1px solid #e0e0e0\",\n    zIndex: 1000,\n    backgroundColor: \"white\",\n    padding: \"1rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  headerLayout: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr auto 1fr\",\n    justifyContent: \"center\",\n    maxWidth: \"55rem\",\n    width: \"100%\",\n  },\n  marginAuto: {\n    margin: \"auto\",\n    marginRight: 0,\n  },\n  statsHeader: {\n    padding: \"0rem 1rem\",\n  },\n});\n\nconst DetailedActivity = ({\n  activity,\n  handleGoBack,\n}: DetailedActivityProps) => {\n  const css = useStyles();\n\n  return (\n    <div className=\"activity-component\">\n      <div className={css.header}>\n        <div className={css.headerLayout}>\n          <div>\n            <Button\n              onClick={handleGoBack}\n              icon={<Previous />}\n              label=\"Activities\"\n              size=\"small\"\n            />\n          </div>\n          <Heading level=\"3\" className={css.marginAuto}>\n            {activity?.type ? activity.type : \"Loading\"}\n          </Heading>\n        </div>\n      </div>\n\n      {activity?.polyline && <Mapbox polyline={activity.polyline} />}\n      {activity && activity.streamData ? (\n        <>\n          <Heading level=\"2\" className={css.statsHeader}>{`${format(\n            new Date(activity.startTime),\n            \"EEEE, LLLL d, yyyy\"\n          )} at ${format(new Date(activity.startTime), \"HH:mm aaa\")}`}</Heading>\n\n          <Heading level=\"3\" className={css.statsHeader}>\n            Heart Rate\n          </Heading>\n          <HeartRateChart\n            streamData={activity.streamData}\n            distance={activity.distance}\n          />\n\n          <Heading level=\"3\" className={css.statsHeader}>\n            Elevation\n          </Heading>\n          <ElevationChart\n            points={activity.streamData}\n            distance={activity.distance}\n          />\n\n          <Heading level=\"3\" className={css.statsHeader}>\n            Pace\n          </Heading>\n          <PaceChart points={activity.streamData} />\n\n          <Heading level=\"3\" className={css.statsHeader}>\n            Splits\n          </Heading>\n          <SplitsChart points={activity.streamData} />\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default DetailedActivity;\n","import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { BeatLoader } from \"react-spinners\";\n\nconst useStyles = createUseStyles({\n  container: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"2rem 0\",\n  },\n});\n\nexport const Loading = () => {\n  const css = useStyles();\n\n  return (\n    <div className={css.container}>\n      <BeatLoader size=\"30px\" margin=\"4px\" color=\"#7D4CDB\" />\n    </div>\n  );\n};\n","import { useEffect, useRef } from \"react\";\n\n/**\n * '!mapbox-gl' is a workaround to ES6 compilation errors.\n * @see https://github.com/mapbox/mapbox-gl-js/issues/10565\n */\n// @ts-ignore\n// eslint-disable-next-line\nimport mapboxgl from \"!mapbox-gl\";\nimport * as mapboxPoly from \"@mapbox/polyline\";\nimport { createUseStyles } from \"react-jss\";\n\nconst getBoundingBox = (coords: any[]) => {\n  const bbox = [\n    Number.POSITIVE_INFINITY,\n    Number.POSITIVE_INFINITY,\n    Number.NEGATIVE_INFINITY,\n    Number.NEGATIVE_INFINITY,\n  ];\n\n  return coords.reduce((prev, coord) => {\n    return [\n      Math.min(coord[0], prev[0]),\n      Math.min(coord[1], prev[1]),\n      Math.max(coord[0], prev[2]),\n      Math.max(coord[1], prev[3]),\n    ];\n  }, bbox);\n};\n\nconst useStyles = createUseStyles({\n  map: {\n    height: \"25rem\",\n  },\n});\n\ntype MapboxProps = {\n  polyline: string;\n};\n\nexport const Mapbox = ({ polyline }: MapboxProps) => {\n  const mapContainer = useRef(null);\n  const css = useStyles();\n\n  useEffect(() => {\n    setupMap();\n  });\n\n  const setupMap = (): void => {\n    const geojson = mapboxPoly.toGeoJSON(polyline);\n    const bounds = getBoundingBox(geojson.coordinates);\n\n    const map = new mapboxgl.Map({\n      container: mapContainer.current || \"\",\n      style: \"mapbox://styles/mapbox/outdoors-v11\",\n      bounds: new mapboxgl.LngLatBounds(bounds),\n      fitBoundsOptions: {\n        padding: {\n          top: 40,\n          bottom: 40,\n          left: 40,\n          right: 40,\n        },\n      },\n      accessToken: process.env.REACT_APP_MAPBOX_PUBLIC_KEY,\n    });\n\n    // Add map controls\n    map.addControl(new mapboxgl.NavigationControl());\n    map.scrollZoom.disable();\n\n    map.on(\"load\", () => {\n      map.addSource(\"route\", {\n        type: \"geojson\",\n        data: {\n          type: \"Feature\",\n          properties: {},\n          geometry: {\n            type: \"LineString\",\n            coordinates: geojson.coordinates,\n          },\n        },\n      });\n      map.addLayer({\n        id: \"route\",\n        type: \"line\",\n        source: \"route\",\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\",\n        },\n        paint: {\n          \"line-color\": \"#008DD5\",\n          \"line-width\": 4,\n        },\n      });\n    });\n  };\n\n  return <div ref={mapContainer} className={css.map}></div>;\n};\n"],"names":["range","from","to","result","i","push","points","distance","data","filter","point","altitude","map","elevation","Number","toFixed","ticks","ResponsiveContainer","height","width","AreaChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","unit","interval","YAxis","allowDecimals","Tooltip","labelFormatter","d","formatter","Area","isAnimationActive","type","stroke","fill","speed","Pace","filterStanding","valFormatter","useCallback","val","formatPace","labelFormatted","LineChart","reversed","Line","dot","MetersPerSecondToMinutesPerKMConversionFactor","length","currentSplit","startTime","time","forEach","seconds","Date","getTime","name","value","lastPoint","dist","calculateSplits","BarChart","Bar","HeartRateChart","streamData","heartRate","tooltipLabelFormat","valueFormatter","useStyles","createUseStyles","header","position","borderBottom","zIndex","backgroundColor","padding","display","justifyContent","headerLayout","gridTemplateColumns","maxWidth","marginAuto","marginRight","statsHeader","activity","handleGoBack","css","className","Button","onClick","icon","Previous","label","size","Heading","level","polyline","format","container","Loading","BeatLoader","color","Mapbox","mapContainer","useRef","useEffect","setupMap","geojson","mapboxPoly","bounds","coords","bbox","POSITIVE_INFINITY","NEGATIVE_INFINITY","reduce","prev","coord","Math","min","max","getBoundingBox","coordinates","mapboxgl","current","style","fitBoundsOptions","accessToken","process","addControl","scrollZoom","disable","on","addSource","properties","geometry","addLayer","id","source","layout","paint","ref"],"sourceRoot":""}